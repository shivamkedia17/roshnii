services:
    # Development Database Service
    db:
        image: postgres:15-alpine
        container_name: roshnii-postgres-dev
        environment:
            POSTGRES_USER: ${POSTGRES_USER:-roshnii}
            POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-abcd1234}
            POSTGRES_DB: ${POSTGRES_DB:-roshnii_db}
            # A database is created with these values in the directory, so the init.sql file is not needed.
            DB_PORT: ${DB_PORT:-5432}
        ports:
            - "${DB_PORT:-5432}:5432" # Map host port to container 5432
        volumes:
            - ./db:/docker-entrypoint-initdb.d # Mount SCHEMA initialization scripts, DATABASE already created
            # This line mounts a local 'db' directory from your host into the container's /docker-entrypoint-initdb.d directory.
            # PostgreSQL automatically executes all .sql, .sql.gz, and .sh files found in this directory in alphabetical order
            # when the container is first initialized (only if the data directory is empty).
            # This allows you to define database initialization scripts like creating tables, indexes, and loading initial data.
            - postgres_data_roshnii_dev:/var/lib/postgresql/data
        restart: unless-stopped
        healthcheck:
            test:
                [
                    "CMD-SHELL",
                    "pg_isready -U ${POSTGRES_USER:-roshnii} -d ${POSTGRES_DB:-roshnii_db}",
                ]
            interval: 5s
            timeout: 5s
            retries: 5

volumes:
    # Define the volume but with no explicit configuration
    # This allows Docker to manage it completely
    postgres_data_roshnii_dev:
        driver: local
