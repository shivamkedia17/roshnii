services:
    # Development Database Service
    db:
        image: postgres:15-alpine
        container_name: roshnii-postgres-dev
        environment:
            POSTGRES_USER: ${POSTGRES_USER} # Read from .env file
            POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
            POSTGRES_DB: ${POSTGRES_DB}
            DB_PORT: ${DB_PORT}

        ports:
            - "${DB_PORT}:5432" # Map host 5432 to container 5432 for dev access
        volumes:
            - ./db:/docker-entrypoint-initdb.d # Initialize schema on first start
            # This line mounts a local 'db' directory from your host into the container's /docker-entrypoint-initdb.d directory.
            # PostgreSQL automatically executes all .sql, .sql.gz, and .sh files found in this directory in alphabetical order
            # when the container is first initialized (only if the data directory is empty).
            # This allows you to define database initialization scripts like creating tables, indexes, and loading initial data.
            - postgres_dev_data:/var/lib/postgresql/data # Persist dev data
        healthcheck:
            test:
                [
                    "CMD-SHELL",
                    "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}",
                ]
            interval: 5s
            timeout: 5s
            retries: 5

# Define the named volume for persistent dev data
volumes:
    postgres_dev_data:
